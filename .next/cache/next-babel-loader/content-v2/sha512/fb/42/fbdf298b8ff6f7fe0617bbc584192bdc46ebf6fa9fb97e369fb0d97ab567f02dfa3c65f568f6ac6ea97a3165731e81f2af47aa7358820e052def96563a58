{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\react\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://dcontent.inviacdn.net/shared/img/web-800x600/2014/10/31/d2/5047314-iberostar-dominicana.jpg\",\n    title: \"First Meetup\",\n    address: \"Some Street 5\",\n    description: \"This is a first meetup\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 12\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://synek121:tJpe6en0SWQE0ZNY@cluster0.z52oo.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        image: 'https://dcontent.inviacdn.net/shared/img/web-800x600/2014/10/31/d2/5047314-iberostar-dominicana.jpg',\n        id: 'm1',\n        title: 'FirstMeetup',\n        address: 'Some Street 5',\n        description: 'This is a first meetup'\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/react/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","MeetupDetails","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","console","log","props","meetupData","image","id","title","address","description"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,GAAyB;AACrB,sBAAO,QAAC,YAAD;AACH,IAAA,KAAK,EAAC,qGADH;AAEH,IAAA,KAAK,EAAC,cAFH;AAGH,IAAA,OAAO,EAAC,eAHL;AAIH,IAAA,WAAW,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA,UAAP;AAMH;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CAAoB,wGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AACA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAYC,MAAM,KAAK;AAC1BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACL,GAAP,CAAWQ,QAAX;AAAZ;AADkB,KAAL,CAAlB;AAFJ,GAAP;AAMH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AAEA,SAAO;AACHM,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAE;AACRC,QAAAA,KAAK,EAAE,qGADC;AAERC,QAAAA,EAAE,EAAE,IAFI;AAGRC,QAAAA,KAAK,EAAE,aAHC;AAIRC,QAAAA,OAAO,EAAE,eAJD;AAKRC,QAAAA,WAAW,EAAE;AALL;AADT;AADJ,GAAP;AAWH;AAED,eAAe5B,aAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nfunction MeetupDetails() {\r\n    return <MeetupDetail \r\n        image='https://dcontent.inviacdn.net/shared/img/web-800x600/2014/10/31/d2/5047314-iberostar-dominicana.jpg'\r\n        title='First Meetup'\r\n        address='Some Street 5'\r\n        description='This is a first meetup'\r\n    />\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n    const client = await MongoClient.connect('mongodb+srv://synek121:tJpe6en0SWQE0ZNY@cluster0.z52oo.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection('meetups');\r\n    const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map(meetup => ({ \r\n            params: { meetupId: meetup._id.toString() } \r\n        }))\r\n    }\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n    const meetupId = context.params.meetupId;\r\n    console.log(meetupId);\r\n\r\n    return {\r\n        props: {\r\n            meetupData: {\r\n                image: 'https://dcontent.inviacdn.net/shared/img/web-800x600/2014/10/31/d2/5047314-iberostar-dominicana.jpg',\r\n                id: 'm1',\r\n                title: 'FirstMeetup',\r\n                address: 'Some Street 5',\r\n                description: 'This is a first meetup'\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}